{"ast":null,"code":"var _jsxFileName = \"/Users/Jordynn/Desktop/Bootcamp/ReactJS/19-homework/Clicky-Game/src/App.js\";\n//     default  named\nimport React, { Component, Fragment } from 'react';\nimport PicturesCard from './components/PicturesCard';\nimport Navbar from './components/Navbar';\nimport Hero from './components/Hero';\nimport Footer from './components/Footer';\nimport Wrapper from './components/Wrapper';\nimport friends from './friends.json';\nimport './App.css'; // configuration - class - stateful WE CAN USE \"THIS\"\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      score: 0,\n      highscore: 0,\n      // using this as example to show what props can do\n      spanData: 'Clicky Game: 2019' // title: \"Clicky Game\"\n\n    };\n\n    this.endGame = () => {\n      if (this.state.score > this.state.highscore) {\n        this.setState({\n          highscore: this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      this.state.friends.forEach(card => {\n        card.count = 0;\n      });\n      this.setState({\n        score: 0\n      });\n      return true;\n    };\n\n    this.clicks = id => {\n      // eslint-disable-next-line array-callback-return\n      this.state.friends.find((friend, index) => {\n        if (friend.id === id) {\n          if (friends[index].count === 0) {\n            friends[index].count = friends[index].count + 1;\n            this.setState({\n              score: this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n            this.state.friends.sort(() => Math.random() - 0.5);\n            return true;\n          } else {\n            this.endGame();\n          }\n        }\n      });\n    };\n  }\n\n  render() {\n    // define variables - define methods\n    // explicit - we told it to return something\n    // implied - we didn't tell it, but it returned undefined\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      title: this.state.title,\n      score: this.state.score,\n      highscore: this.state.highscore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Hero, {\n      backgroundImage: \" https://img.freepik.com/free-vector/minimal-triangle-pattern-design-pastel-colors_1017-14885.jpg?size=338&ext=jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Clicky Game\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Click a candy ONCE to earn points...\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"if you click the same candy more than once, game over.\")), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(PicturesCard, {\n      clicks: this.clicks,\n      id: friend.id,\n      key: friend.id,\n      image: friend.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      spanData: this.state.spanData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Jordynn/Desktop/Bootcamp/ReactJS/19-homework/Clicky-Game/src/App.js"],"names":["React","Component","Fragment","PicturesCard","Navbar","Hero","Footer","Wrapper","friends","App","state","score","highscore","spanData","endGame","setState","console","log","forEach","card","count","clicks","id","find","friend","index","sort","Math","random","render","title","map","image"],"mappings":"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","sourcesContent":["//     default  named\nimport React, { Component, Fragment } from 'react';\nimport PicturesCard from './components/PicturesCard';\nimport Navbar from './components/Navbar';\nimport Hero from './components/Hero';\nimport Footer from './components/Footer';\nimport Wrapper from './components/Wrapper';\nimport friends from './friends.json';\nimport './App.css';\n\n// configuration - class - stateful WE CAN USE \"THIS\"\nclass App extends Component {\n  // setting state to json array\n  state = {\n    friends,\n    score: 0,\n    highscore: 0,\n    // using this as example to show what props can do\n    spanData: 'Clicky Game: 2019',\n    // title: \"Clicky Game\"\n  };\n\n  // api call (this case calling friends.json) - set that data to state\n\n  endGame = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({ highscore: this.state.score }, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.friends.forEach(card => {\n      card.count = 0;\n    });\n    this.setState({ score: 0 });\n    return true;\n  };\n\n  clicks = id => {\n    // eslint-disable-next-line array-callback-return\n    this.state.friends.find((friend, index) => {\n      if (friend.id === id) {\n        if (friends[index].count === 0) {\n          friends[index].count = friends[index].count + 1;\n          this.setState({ score: this.state.score + 1 }, function() {\n            console.log(this.state.score);\n          });\n          this.state.friends.sort(() => Math.random() - 0.5);\n          return true;\n        } else {\n          this.endGame();\n        }\n      }\n    });\n  };\n\n  render() {\n    // define variables - define methods\n    // explicit - we told it to return something\n    // implied - we didn't tell it, but it returned undefined\n    return (\n      <Fragment>\n          <Navbar title={this.state.title} score={this.state.score} highscore={this.state.highscore} /> \n          <Hero backgroundImage=\" https://img.freepik.com/free-vector/minimal-triangle-pattern-design-pastel-colors_1017-14885.jpg?size=338&ext=jpg\">\n            <h1>Clicky Game</h1>\n            <h2>Click a candy ONCE to earn points...</h2>\n            <h2>if you click the same candy more than once, game over.</h2>\n          </Hero>\n          <Wrapper>\n          {/* higher order function - takes a function as an argument or returns a function */}\n          {this.state.friends.map(friend => (\n            <PicturesCard\n              clicks={this.clicks}\n              id={friend.id}\n              key={friend.id}\n              image={friend.image}\n            />\n          ))}\n        </Wrapper>\n        <Footer spanData={this.state.spanData} />\n      </Fragment>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}